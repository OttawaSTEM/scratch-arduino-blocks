// Do not edit this file; automatically generated by build.py.
'use strict';

let Blockly = require('scratch-arduino-blocks');

Blockly.Arduino=new Blockly.Generator("Arduino");Blockly.Arduino.addReservedWords("alignas,alignof,and,and_eq,asm,atomic_cancel,atomic_commit,atomic_noexcept,auto,bitand,bitor,bool,break,case,catch,char,char8_t,char16_t,char32_t,class,compl,concept,const,consteval,constexpr,constinit,const_cast,continue,co_await,co_return,co_yield,decltype,default,delete,do,double,dynamic_cast,else,enum,explicit,export,extern,false,float,for,friend,goto,if,inline,int,long,mutable,namespace,new,noexcept,not,not_eq,nullptr,operator,or,or_eq,private,protected,public,reflexpr,register,reinterpret_cast,requires,return,short,signed,sizeof,static,static_assert,static_cast,struct,switch,synchronized,template,this,thread_local,throw,true,try,typedef,typeid,typename,union,unsigned,using,virtual,void,volatile,wchar_t,while,xor,xor_eq,assert,int8_t,uint8_t,int16_t,uint16_t,int32_t,uint32_t,abs,labs,llabs,fabs,div,ldiv,lldiv,fmod,remainder,remquo,fma,fmax,fmin,fdim,nan,nanf,nanl,exp,exp2,expm1,log,log2,log10,log1p,ilogb,logb,sqrt,cbrt,hypot,pow,sin,cos,tan,asin,acos,atan,atan2,sinh,cosh,tanh,asinh,acosh,atanh,erf,erfc,lgamma,tgamma,ceil,floor,trunc,round,lround,llround,nearbyint,rint,lrint,llrint,frexp,ldxp,modf,scalbn,scalbln,nextafter,nexttowardcopysign,fpclassify,isfinite,isfinite,isinf,isnan,isnormal,signbitsize_t,fopen,freopen,fflush,fclose,setbuf,setvbuf,fwide,fread,fwritefgetc,fgetwa,getc,getwc,fgets,fgetws,fputc,fputwc,putc,putwc,fputs,fputws,getchar,getwchar,gets,putchar,putwchar,puts,ungetc,ungetwc,scanf,wscanf,fscanf,fwscanf,sscanf,swscanf,vscanf,vwscanf,vfscanf,vfwsanf,printf,wprintf,fprintf,fwprintf,sprintf,swprintf,snprintf,vprintf,vwprintf,vfprintf,vfwprintf,vsprintf,vwsprintf,vsnprintf,perrorftell,ftello,fseek,fseeko,fgetpos,fsetpos,rewind,clearerr,feof,ferrorremove,rename,tmpfile,tmpnam,strcpy,strncpy,strcat,strncat,strxfrm,strlen,strcmp,strncmp,strcoll,strchr,strrchr,strspn,strcspn,strpbrk,strstr,strtok,strerror,memset,memcpy,memmove,memcmp,memchr,setup,loop,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,interger,constants,floating,point,boolean,byte,word,double,string,String,array,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,constrain,map,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts");
Blockly.Arduino.ORDER_ATOMIC=0;Blockly.Arduino.ORDER_UNARY_POSTFIX=1;Blockly.Arduino.ORDER_UNARY_PREFIX=2;Blockly.Arduino.ORDER_MULTIPLICATIVE=3;Blockly.Arduino.ORDER_ADDITIVE=4;Blockly.Arduino.ORDER_SHIFT=5;Blockly.Arduino.ORDER_RELATIONAL=6;Blockly.Arduino.ORDER_EQUALITY=7;Blockly.Arduino.ORDER_BITWISE_AND=8;Blockly.Arduino.ORDER_BITWISE_XOR=9;Blockly.Arduino.ORDER_BITWISE_OR=10;Blockly.Arduino.ORDER_LOGICAL_AND=11;Blockly.Arduino.ORDER_LOGICAL_OR=12;Blockly.Arduino.ORDER_CONDITIONAL=13;
Blockly.Arduino.ORDER_ASSIGNMENT=14;Blockly.Arduino.ORDER_NONE=99;Blockly.Arduino.INDENT="  ";Blockly.Arduino.firstLoop=!0;
Blockly.Arduino.init=function(a){Blockly.Arduino.includes_=Object.create(null);Blockly.Arduino.definitions_=Object.create(null);Blockly.Arduino.customFunctions_=Object.create(null);Blockly.Arduino.customFunctionsArgName_=Object.create(null);Blockly.Arduino.setups_=Object.create(null);Blockly.Arduino.loops_=Object.create(null);Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_);Blockly.Arduino.variableDB_.setVariableMap(a.getVariableMap());
var b=[];a=Blockly.Variables.allVariables(a);for(var c=0;c<a.length;c++)b[c]="float "+Blockly.Arduino.variableDB_.getName(a[c].name,Blockly.Variables.NAME_TYPE)+";";0<a.length&&(Blockly.Arduino.definitions_.variables=b.join("\n"))};
Blockly.Arduino.finish=function(a){var b=[];for(f in Blockly.Arduino.includes_)b.push(Blockly.Arduino.includes_[f]);var c=[];for(f in Blockly.Arduino.definitions_)c.push(Blockly.Arduino.definitions_[f]);var d=[];for(f in Blockly.Arduino.customFunctions_)d.push(Blockly.Arduino.customFunctions_[f]);var e=[];for(f in Blockly.Arduino.setups_)e.push(Blockly.Arduino.setups_[f]);var g=[];for(f in Blockly.Arduino.loops_)g.push(Blockly.Arduino.loops_[f]);var f="// generated by Scratch Arduino\n";0!=b.length&&
(f+=b.join("\n")+"\n\n");0!=c.length&&(f+=c.join("\n")+"\n\n");0!=d.length&&(f+=d.join("\n\n")+"\n\n");f+="void setup() {\n";0!=e.length&&(f+=Blockly.Arduino.INDENT+e.join("\n"+Blockly.Arduino.INDENT)+"\n");f=f+a+"}\n";Blockly.Arduino.firstLoop&&(f+="\nvoid loop() {\n"+Blockly.Arduino.INDENT+"repeat();\n}\n");0!=g.length?(f=f+"\nvoid repeat() {\n"+(Blockly.Arduino.INDENT+g.join("\n"+Blockly.Arduino.INDENT)+"\n"),f+="}\n"):f=f.replace(/ *repeat\(\);\n/g,"");delete Blockly.Arduino.definitions_;delete Blockly.Arduino.includes_;
delete Blockly.Arduino.customFunctions_;delete Blockly.Arduino.customFunctionsArgName_;delete Blockly.Arduino.setups_;delete Blockly.Arduino.loop_;Blockly.Arduino.variableDB_.reset();Blockly.Arduino.firstLoop=!0;return f};
Blockly.Arduino.scrub_=function(a,b){if(null===b||!Blockly.Arduino.check_(a))return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=Blockly.Arduino.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.Arduino.allNestedComments(d))&&(c+=Blockly.Arduino.prefixLines(d,"// "))}e=b;null===a.getSurroundParent()&&""!==b&&"control_forever"!==
a.type&&("procedures_definition"!==a.type&&"procedures_prototype"!==a.type&&(e=Blockly.Arduino.INDENT+e,""!==c&&(c=Blockly.Arduino.INDENT+c)),e=e.replace(/\n/g,"\n"+Blockly.Arduino.INDENT),e=e.slice(0,e.length-2));a=a.nextConnection&&a.nextConnection.targetBlock();a=Blockly.Arduino.blockToCode(a);return c+e+a};Blockly.Arduino.scrubNakedValue=function(a){return a+";\n"};
Blockly.Arduino.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\$/g,"\\$").replace(/'/g,"\\'");return'"'+a+'"'};Blockly.Arduino.check_=function(a){return null===a.getSurroundParent()&&(null!==a.previousConnection&&null!==a.getTopStackBlock().previousConnection||2===a.getOutputShape()||1===a.getOutputShape())?!1:!0};Blockly.Arduino.arduino={};Blockly.Arduino.arduino_pin_setPinMode=function(a){var b=a.getFieldValue("PIN")||"0";a=a.getFieldValue("MODE")||"INPUT";return"pinMode("+b+", "+a+");\n"};Blockly.Arduino.arduino_pin_setDigitalOutput=function(a){var b=a.getFieldValue("PIN")||"0";a=Blockly.Arduino.valueToCode(a,"LEVEL",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"LOW";return"digitalWrite("+b+", "+a+");\n"};Blockly.Arduino.arduino_pin_menu_level=function(a){return[a.getFieldValue("level")||"LOW",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_pin_setPwmOutput=function(a){var b=a.getFieldValue("PIN")||"0";a=Blockly.Arduino.valueToCode(a,"OUT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0;return"analogWrite("+b+", "+a+");\n"};Blockly.Arduino.arduino_pin_readDigitalPin=function(a){return["digitalRead("+(a.getFieldValue("PIN")||"0")+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.arduino_pin_readAnalogPin=function(a){return["analogRead("+(a.getFieldValue("PIN")||"A1")+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_pin_setServoOutput=function(a){var b=a.getFieldValue("PIN")||"A1";a=Blockly.Arduino.valueToCode(a,"OUT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0;Blockly.Arduino.includes_.include_servo="#include <Servo.h>";Blockly.Arduino.definitions_["definitions_servo"+b]="Servo servo_"+b+";";Blockly.Arduino.setups_["setups_servo"+b]="servo_"+b+".attach("+b+");";return"servo_"+b+".write("+a+");\n"};
Blockly.Arduino.arduino_pin_attachInterrupt=function(a){var b=a.getFieldValue("PIN")||"2",c=a.getFieldValue("MODE")||"RISING",d=Blockly.Arduino.statementToCode(a,"SUBSTACK");d=Blockly.Arduino.addLoopTrap(d,a.id);Blockly.Arduino.definitions_["definitions_ISR_"+c+b]="ISR_"+c+"_"+b+"() {\n"+d+"}";return"attachInterrupt(digitalPinToInterrupt("+b+"), ISR_"+c+"_"+b+", "+c+");\n"};
Blockly.Arduino.arduino_pin_detachInterrupt=function(a){return"detachInterrupt(digitalPinToInterrupt("+(a.getFieldValue("PIN")||"2")+");\n"};Blockly.Arduino.arduino_serial_serialBegin=function(a){return"Serial.begin("+(a.getFieldValue("VALUE")||"9600")+");\n"};Blockly.Arduino.arduino_serial_serialPrint=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"";return"warp"===(a.getFieldValue("EOL")||"warp")?"Serial.println("+b+");\n":"Serial.print("+b+");\n"};
Blockly.Arduino.arduino_serial_serialAvailable=function(){return["Serial.available()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.arduino_serial_serialReadData=function(){return["Serial.read()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.arduino_serial_multiSerialBegin=function(a){var b=a.getFieldValue("NO")||"0";a=a.getFieldValue("VALUE")||"9600";"0"===b&&(b="");return"Serial"+b+".begin("+a+");\n"};
Blockly.Arduino.arduino_serial_multiSerialPrint=function(a){var b=a.getFieldValue("NO")||"0",c=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"";a=a.getFieldValue("EOL")||"warp";"0"===b&&(b="");return"warp"===a?"Serial"+b+".println("+c+");\n":"Serial"+b+".print("+c+");\n"};Blockly.Arduino.arduino_serial_multiSerialAvailable=function(a){a=a.getFieldValue("NO")||"0";"0"===a&&(a="");return["Serial"+a+".available()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_serial_multiSerialReadAByte=function(a){a=a.getFieldValue("NO")||"0";"0"===a&&(a="");return["Serial"+a+".read()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.arduino_sensor_runningTime=function(){return["millis()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_data_dataMap=function(a){var b=Blockly.Arduino.valueToCode(a,"DATA",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0,c=Blockly.Arduino.valueToCode(a,"ARG0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||1,d=Blockly.Arduino.valueToCode(a,"ARG1",Blockly.Arduino.ORDER_UNARY_POSTFIX)||100,e=Blockly.Arduino.valueToCode(a,"ARG2",Blockly.Arduino.ORDER_UNARY_POSTFIX)||1;a=Blockly.Arduino.valueToCode(a,"ARG3",Blockly.Arduino.ORDER_UNARY_POSTFIX)||1E3;return["map("+b+", "+c+", "+d+", "+e+", "+a+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_data_dataConstrain=function(a){var b=Blockly.Arduino.valueToCode(a,"DATA",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0,c=Blockly.Arduino.valueToCode(a,"ARG0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||1;a=Blockly.Arduino.valueToCode(a,"ARG1",Blockly.Arduino.ORDER_UNARY_POSTFIX)||100;return["constrain("+b+", "+c+", "+a+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_data_dataConvert=function(a){var b=Blockly.Arduino.valueToCode(a,"DATA",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0;switch(a.getFieldValue("TYPE")||"INTEGER"){case "INTEGER":var c="String("+b+").toInt()";break;case "DECIMAL":c="String("+b+").toFloat()";break;case "STRING":c="String("+b+")"}return[c,Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_data_dataConvertASCIICharacter=function(a){return["String(char("+(Blockly.Arduino.valueToCode(a,"DATA",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0")+"))",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.arduino_data_dataConvertASCIINumber=function(a){return["toascii(String("+(Blockly.Arduino.valueToCode(a,"DATA",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0")+")[0])",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.colour={};Blockly.Arduino.colour_picker=function(a){return[a.getFieldValue("COLOUR"),Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.control={};Blockly.Arduino.control_wait=function(a){return"delay("+Blockly.Arduino.valueToCode(a,"DURATION",Blockly.Arduino.ORDER_UNARY_POSTFIX)+" * 1000);\n"};Blockly.Arduino.control_repeat=function(a){var b=Blockly.Arduino.valueToCode(a,"TIMES",Blockly.Arduino.ORDER_UNARY_POSTFIX),c=Blockly.Arduino.statementToCode(a,"SUBSTACK");c=Blockly.Arduino.addLoopTrap(c,a.id);return a="for (int i = 0; i < "+b+"; i++) {\n"+c+"}\n"};
Blockly.Arduino.control_forever=function(a){if(Blockly.Arduino.firstLoop&&!a.getSurroundParent()){Blockly.Arduino.firstLoop=!1;var b=Blockly.Arduino.statementToCode(a,"SUBSTACK");b=Blockly.Arduino.addLoopTrap(b,a.id);a="}\n\nvoid loop() {\n"+b+(Blockly.Arduino.INDENT+"repeat();\n")}else b=Blockly.Arduino.statementToCode(a,"SUBSTACK"),b=Blockly.Arduino.addLoopTrap(b,a.id),a="while (1) {\n"+b+(Blockly.Arduino.INDENT+"repeat();\n}\n");return a};
Blockly.Arduino.control_if=function(a){var b=Blockly.Arduino.valueToCode(a,"CONDITION",Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(a,"SUBSTACK");c=Blockly.Arduino.addLoopTrap(c,a.id);return a="if ("+b+") {\n"+c+"}\n"};
Blockly.Arduino.control_if_else=function(a){var b=Blockly.Arduino.valueToCode(a,"CONDITION",Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(a,"SUBSTACK");c=Blockly.Arduino.addLoopTrap(c,a.id);var d=Blockly.Arduino.statementToCode(a,"SUBSTACK2");d=Blockly.Arduino.addLoopTrap(d,a.id);a="if ("+b+") {\n"+c+"}\nelse{\n";a+=d;return a+="}\n"};
Blockly.Arduino.control_wait_until=function(a){return"while (!"+(Blockly.Arduino.valueToCode(a,"CONDITION",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"false")+") {\n"+(Blockly.Arduino.INDENT+"repeat();\n}\n")};Blockly.Arduino.control_repeat_until=function(a){var b=Blockly.Arduino.valueToCode(a,"CONDITION",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"false",c=Blockly.Arduino.statementToCode(a,"SUBSTACK");c=Blockly.Arduino.addLoopTrap(c,a.id);return a="while (!"+b+") {\n"+c+(Blockly.Arduino.INDENT+"repeat();\n}\n")};Blockly.Arduino.data={};Blockly.Arduino.data_variable=function(a){return[Blockly.Arduino.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.data_setvariableto=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";a=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE);parseFloat(b.slice(1,-1))==b.slice(1,-1)&&(b=parseFloat(b.slice(1,-1)).toString());return a+" = "+b+";\n"};
Blockly.Arduino.data_changevariableby=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return Blockly.Arduino.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE)+" += "+b+";\n"};Blockly.Arduino.data_showvariable=function(){return""};Blockly.Arduino.data_hidevariable=function(){return""};Blockly.Arduino.data_listcontents=function(){return""};Blockly.Arduino.data_listindexall=function(){return""};
Blockly.Arduino.data_listindexrandom=function(){return""};Blockly.Arduino.data_addtolist=function(){return""};Blockly.Arduino.data_deleteoflist=function(){return""};Blockly.Arduino.data_deletealloflist=function(){return""};Blockly.Arduino.data_insertatlist=function(){return""};Blockly.Arduino.data_replaceitemoflist=function(){return""};Blockly.Arduino.data_itemoflist=function(){return""};Blockly.Arduino.data_itemnumoflist=function(){return""};Blockly.Arduino.data_lengthoflist=function(){return""};
Blockly.Arduino.data_listcontainsitem=function(){return""};Blockly.Arduino.data_showlist=function(){return""};Blockly.Arduino.data_hidelist=function(){return""};Blockly.Arduino.esp32={};Blockly.Arduino.arduino_pin_esp32SetPwmOutput=function(a){var b=a.getFieldValue("PIN")||"0",c=Blockly.Arduino.valueToCode(a,"OUT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0;a=a.getFieldValue("CH")||"0";Blockly.Arduino.setups_["esp32SetPwmOutput"+b]="ledcSetup("+a+", 490, 8);";Blockly.Arduino.setups_["esp32SetPwmOutput2"+b]="ledcAttachPin("+b+", "+a+");";return"ledcWrite("+a+", "+c+");\n"};
Blockly.Arduino.arduino_pin_esp32SetDACOutput=function(a){var b=a.getFieldValue("PIN")||"0";a=Blockly.Arduino.valueToCode(a,"OUT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0;return"dacWrite("+b+", "+a+");\n"};Blockly.Arduino.arduino_pin_esp32ReadTouchPin=function(a){return["touchRead("+(a.getFieldValue("PIN")||"0")+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_pin_esp32SetServoOutput=function(a){var b=a.getFieldValue("PIN")||"0",c=Blockly.Arduino.valueToCode(a,"OUT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||0;a=a.getFieldValue("CH")||"0";Blockly.Arduino.includes_.esp32SetServoOutput="#include <Servo.h>";Blockly.Arduino.definitions_["esp32SetServoOutput"+b]="Servo servo_"+b+";";Blockly.Arduino.setups_["esp32SetServoOutput"+b]="servo_"+b+".attach("+b+", "+a+");";return"servo_"+b+".write("+c+");\n"};
Blockly.Arduino.arduino_sensor_esp32ReadHallSensor=function(){return["hallRead()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.event={};Blockly.Arduino.event_whenarduinobegin=function(){Blockly.Arduino.includes_.arduino="#include <Arduino.h>";return""};Blockly.Arduino.led={};Blockly.Arduino.arduino_fastled_setLEDNumber=function(a){a=Blockly.Arduino.valueToCode(a,"NUMBER",Blockly.Arduino.ORDER_NONE)||5;Blockly.Arduino.includes_.include_fastled="#include <FastLED.h>";Blockly.Arduino.definitions_.definitions_fasled_setLEDNumber="#define NUM_LEDS    "+a+"\nCRGB leds[NUM_LEDS];";Blockly.Arduino.setups_.setups_fastled_setLEDNumber="FastLED.addLeds<WS2813, 3, GRB>(leds, NUM_LEDS);\n";return""};
Blockly.Arduino.arduino_fastled_setBrightness=function(a){return"FastLED.setBrightness("+(Blockly.Arduino.valueToCode(a,"NUMBER",Blockly.Arduino.ORDER_NONE)||10)+");\n"};Blockly.Arduino.arduino_fastled_setAllLEDColor=function(a){return"fill_solid(leds, NUM_LEDS, CRGB::"+a.getFieldValue("COLOR")+");\nFastLED.show();\n"};
Blockly.Arduino.arduino_fastled_setAllLEDColorRGB=function(a){var b=Blockly.Arduino.valueToCode(a,"RED",Blockly.Arduino.ORDER_NONE)||255,c=Blockly.Arduino.valueToCode(a,"GREEN",Blockly.Arduino.ORDER_NONE)||255;a=Blockly.Arduino.valueToCode(a,"BLUE",Blockly.Arduino.ORDER_NONE)||255;return"fill_solid(leds, NUM_LEDS, CRGB("+b+", "+c+", "+a+"));\nFastLED.show();\n"};
Blockly.Arduino.arduino_fastled_setAllLEDColorHSV=function(a){var b=Blockly.Arduino.valueToCode(a,"COLOR",Blockly.Arduino.ORDER_NONE).replace("#","");a=parseInt(b.substring(0,2),16);var c=parseInt(b.substring(2,4),16);b=parseInt(b.substring(4,6),16);return"fill_solid(leds, NUM_LEDS, CRGB("+a+", "+c+", "+b+"));\nFastLED.show();\n"};
Blockly.Arduino.arduino_fastled_setLEDColorGradient=function(a){var b=a.getFieldValue("COLOR_FROM");a=a.getFieldValue("COLOR_TO");return"fill_gradient_RGB(leds, NUM_LEDS, CRGB::"+b+", CRGB::"+a+");\nFastLED.show();\n"};
Blockly.Arduino.arduino_fastled_setLEDColorRainbow=function(a){a=Blockly.Arduino.valueToCode(a,"MILLISECOND",Blockly.Arduino.ORDER_NONE)||1;Blockly.Arduino.definitions_.arduino_fastled_setLEDColorRainbow="float hue;";a="for (int i = 0; i < NUM_LEDS; i++) {\n  leds[i] = CHSV(hue, 255, 255);\n}\n"+("EVERY_N_MILLISECONDS("+a+") {\n")+"  hue++;\n}\n";return a+="FastLED.show();\n"};
Blockly.Arduino.arduino_fastled_setLEDColor=function(a){var b=Blockly.Arduino.valueToCode(a,"NUMBER",Blockly.Arduino.ORDER_NONE);a=a.getFieldValue("COLOR");return"leds["+b+"] = CRGB::"+a+";\nFastLED.show();\n"};
Blockly.Arduino.arduino_fastled_setLEDColorRGB=function(a){var b=Blockly.Arduino.valueToCode(a,"NUMBER",Blockly.Arduino.ORDER_NONE)||0,c=Blockly.Arduino.valueToCode(a,"RED",Blockly.Arduino.ORDER_NONE)||255,d=Blockly.Arduino.valueToCode(a,"GREEN",Blockly.Arduino.ORDER_NONE)||255;a=Blockly.Arduino.valueToCode(a,"BLUE",Blockly.Arduino.ORDER_NONE)||255;return"leds["+b+"] = CRGB("+c+", "+d+", "+a+");\nFastLED.show();\n"};
Blockly.Arduino.arduino_fastled_setLEDColorHSV=function(a){var b=Blockly.Arduino.valueToCode(a,"NUMBER",Blockly.Arduino.ORDER_NONE)||0,c=Blockly.Arduino.valueToCode(a,"COLOR",Blockly.Arduino.ORDER_NONE).replace("#","");a=parseInt(c.substring(0,2),16);var d=parseInt(c.substring(2,4),16);c=parseInt(c.substring(4,6),16);return"leds["+b+"] = CRGB("+a+", "+d+", "+c+");\nFastLED.show();\n"};
Blockly.Arduino.arduino_fastled_repeat=function(a){var b=Blockly.Arduino.statementToCode(a,"SUBSTACK");b=Blockly.Arduino.addLoopTrap(b,a.id);return"for (int i = 0; i < NUM_LEDS; i++) {\n"+b+"}\n"};Blockly.Arduino.arduino_fastled_repeat_n_ms=function(a){var b=Blockly.Arduino.statementToCode(a,"SUBSTACK");b=Blockly.Arduino.addLoopTrap(b,a.id);a="EVERY_N_MILLISECONDS("+(Blockly.Arduino.valueToCode(a,"MILLISECOND",Blockly.Arduino.ORDER_NONE)||0)+") {\n"+b;return a+"}\n"};
Blockly.Arduino.arduino_fastled_repeat_n_s=function(a){var b=Blockly.Arduino.statementToCode(a,"SUBSTACK");b=Blockly.Arduino.addLoopTrap(b,a.id);a="EVERY_N_SECONDS("+(Blockly.Arduino.valueToCode(a,"SECOND",Blockly.Arduino.ORDER_NONE)||0)+") {\n"+b;return a+"}\n"};
Blockly.Arduino.arduino_fastled_repeat_n_min=function(a){var b=Blockly.Arduino.statementToCode(a,"SUBSTACK");b=Blockly.Arduino.addLoopTrap(b,a.id);a="EVERY_N_MINTUES("+(Blockly.Arduino.valueToCode(a,"MINTUE",Blockly.Arduino.ORDER_NONE)||0)+") {\n"+b;return a+"}\n"};
Blockly.Arduino.arduino_fastled_repeat_n_hour=function(a){var b=Blockly.Arduino.statementToCode(a,"SUBSTACK");b=Blockly.Arduino.addLoopTrap(b,a.id);a="EVERY_N_HOURS("+(Blockly.Arduino.valueToCode(a,"HOUR",Blockly.Arduino.ORDER_NONE)||0)+") {\n"+b;return a+"}\n"};Blockly.Arduino.math={};Blockly.Arduino.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));isNaN(a)&&(a=0);return[a,0>a?Blockly.Arduino.ORDER_UNARY_PREFIX:Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.math_integer=Blockly.Arduino.math_number;Blockly.Arduino.math_whole_number=Blockly.Arduino.math_number;Blockly.Arduino.math_positive_number=Blockly.Arduino.math_number;Blockly.Arduino.math_angle=Blockly.Arduino.math_number;Blockly.Arduino.math_int8_number=Blockly.Arduino.math_number;
Blockly.Arduino.math_uint8_number=Blockly.Arduino.math_number;Blockly.Arduino.math_int9_number=Blockly.Arduino.math_number;Blockly.Arduino.math_uint10_number=Blockly.Arduino.math_number;Blockly.Arduino.math_int11_number=Blockly.Arduino.math_number;Blockly.Arduino.matrix={};Blockly.Arduino.matrix=function(a){a=a.getFieldValue("MATRIX");isNaN(a)&&(a=0);return[a,Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.operator={};Blockly.Arduino.operator_arithmetic=function(a){var b={operator_add:[" + ",Blockly.Arduino.ORDER_ADDITIVE],operator_subtract:[" - ",Blockly.Arduino.ORDER_ADDITIVE],operator_multiply:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],operator_divide:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE]}[a.type],c=b[0];b=b[1];var d=Blockly.Arduino.valueToCode(a,"NUM1",b)||"0";a=Blockly.Arduino.valueToCode(a,"NUM2",b)||"0";return[d+c+a,b]};Blockly.Arduino.operator_add=Blockly.Arduino.operator_arithmetic;
Blockly.Arduino.operator_subtract=Blockly.Arduino.operator_arithmetic;Blockly.Arduino.operator_multiply=Blockly.Arduino.operator_arithmetic;Blockly.Arduino.operator_divide=Blockly.Arduino.operator_arithmetic;Blockly.Arduino.operator_random=function(a){var b=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0";a=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0";return["random("+b+", "+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.operator_compare=function(a){var b="operator_equals"==a.type?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,c=Blockly.Arduino.valueToCode(a,"OPERAND1",b),d=Blockly.Arduino.valueToCode(a,"OPERAND2",b);'""'===c&&(c="0");'""'===d&&(d="0");parseFloat(c.slice(1,-1))==c.slice(1,-1)&&(c=parseFloat(c.slice(1,-1)).toString());parseFloat(d.slice(1,-1))==d.slice(1,-1)&&(d=parseFloat(d.slice(1,-1)).toString());return[c+{operator_gt:" > ",operator_equals:" == ",operator_lt:" < "}[a.type]+
d,b]};Blockly.Arduino.operator_gt=Blockly.Arduino.operator_compare;Blockly.Arduino.operator_equals=Blockly.Arduino.operator_compare;Blockly.Arduino.operator_lt=Blockly.Arduino.operator_compare;Blockly.Arduino.operator_operation=function(a){var b="operator_and"==a.type?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,c=Blockly.Arduino.valueToCode(a,"OPERAND1",b)||"0",d=Blockly.Arduino.valueToCode(a,"OPERAND2",b)||"0";return[c+{operator_and:" && ",operator_or:" || "}[a.type]+d,b]};
Blockly.Arduino.operator_and=Blockly.Arduino.operator_operation;Blockly.Arduino.operator_or=Blockly.Arduino.operator_operation;Blockly.Arduino.operator_not=function(a){var b=Blockly.Arduino.ORDER_UNARY_PREFIX;return["!"+(Blockly.Arduino.valueToCode(a,"OPERAND",b)||"false"),b]};
Blockly.Arduino.operator_join=function(a){var b=Blockly.Arduino.ORDER_UNARY_PREFIX,c=Blockly.Arduino.valueToCode(a,"STRING1",b)||"''";a=Blockly.Arduino.valueToCode(a,"STRING2",b)||"''";return["String("+c+") + String("+a+")",Blockly.Arduino.ORDER_ADDITIVE]};
Blockly.Arduino.operator_letter_of=function(a){var b=Blockly.Arduino.ORDER_UNARY_PREFIX,c=Blockly.Arduino.valueToCode(a,"STRING",b)||"''";a=Blockly.Arduino.valueToCode(a,"LETTER",b)||"0";a=parseFloat(a)==a?a-1:a+" - 1";return["String("+c+").charAt("+a+")",Blockly.Arduino.ORDER_NONE]};Blockly.Arduino.operator_length=function(a){return["String("+(Blockly.Arduino.valueToCode(a,"STRING",Blockly.Arduino.ORDER_UNARY_PREFIX)||"''")+").length()",Blockly.Arduino.ORDER_NONE]};
Blockly.Arduino.operator_contains=function(a){var b=Blockly.Arduino.ORDER_UNARY_PREFIX,c=Blockly.Arduino.valueToCode(a,"STRING1",b)||"''";a=Blockly.Arduino.valueToCode(a,"STRING2",b)||"0";return["String("+c+").indexof(String("+a+"))",Blockly.Arduino.ORDER_NONE]};Blockly.Arduino.operator_mod=function(a){var b=Blockly.Arduino.ORDER_MULTIPLICATIVE,c=Blockly.Arduino.valueToCode(a,"NUM1",b)||"0";a=Blockly.Arduino.valueToCode(a,"NUM2",b)||"0";return[c+" % "+a,b]};
Blockly.Arduino.operator_round=function(a){return["round("+(Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0")+")",Blockly.Arduino.ORDER_NONE]};
Blockly.Arduino.operator_mathop=function(a){var b=Blockly.Arduino.ORDER_UNARY_POSTFIX,c=a.getFieldValue("OPERATOR");a=Blockly.Arduino.valueToCode(a,"NUM",b)||"0";var d="";b=Blockly.Arduino.ORDER_NONE;switch(c){case "abs":d="abs("+a+")";break;case "floor":d="floor("+a+")";break;case "ceiling":d="ceil("+a+")";break;case "sqrt":d="sqrt("+a+")";break;case "sin":d="sin("+a+" / 180.0 * PI)";break;case "cos":d="cos("+a+" / 180.0 * PI)";break;case "tan":d="tan("+a+" / 180.0 * PI)";break;case "asin":d="asin("+
a+") / PI * 180";b=Blockly.Arduino.ORDER_MULTIPLICATIVE;break;case "acos":d="acos("+a+") / PI * 180";b=Blockly.Arduino.ORDER_MULTIPLICATIVE;break;case "atan":d="atan("+a+") / PI * 180";b=Blockly.Arduino.ORDER_MULTIPLICATIVE;break;case "ln":d="log("+a+")";break;case "log":d="log10("+a+")";break;case "e ^":d="exp("+a+")";break;case "10 ^":d="pow(10, "+a+")"}return[d,b]};Blockly.Arduino.ottorobot={};
Blockly.Arduino.arduino_ottoRobot_setInitial=function(a){Blockly.Arduino.includes_.include_ottoRobot="#include <Otto.h>\nOtto Otto;";Blockly.Arduino.definitions_.definitions_ottoRobot_setInitial="#define PIN_TRIGGER         2   // TRIGGER PIN\n#define PIN_ECHO            3   // ECHO PIN\n#define PIN_LEG_L           4   // Left leg servo\n#define PIN_LEG_R           5   // Right leg servo\n#define PIN_FOOT_L          6   // Left foot servo\n#define PIN_FOOT_R          7   // Right foot servo\n#define PIN_BUZZER          13  // BUZZER PIN\n";Blockly.Arduino.setups_.setups_ottoRobot_setInitial=
"Otto.init(PIN_LEG_L, PIN_LEG_R, PIN_FOOT_L, PIN_FOOT_R, true, PIN_BUZZER);\n  Otto.sing(S_connection);   // Otto wake up!\n  delay(50);\n  Otto.playGesture(OttoHappy);\n  Otto.home();";return""};Blockly.Arduino.arduino_ottoRobot_setHome=function(a){return"Otto.home();\n"};Blockly.Arduino.arduino_ottoRobot_setGesture=function(a){return"Otto.playGesture("+a.getFieldValue("GESTURE")+");\n"};Blockly.Arduino.arduino_ottoRobot_setPlaySound=function(a){return"Otto.sing("+a.getFieldValue("SOUND")+");\n"};
Blockly.Arduino.arduino_ottoRobot_setDance=function(a){a=a.getFieldValue("DANCE");var b="",c="";"Feeling Good"==a?(b="void feeling_good() {\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 1000, 30, 1);\n  Otto.moonwalker(1, 1000, 30, -1);\n  Otto.moonwalker(1, 1000, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(150);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  delay(100);\n  Otto.jitter(8, 900, 30);\n  delay(500);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(150);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  delay(100);\n  Otto.jitter(8, 900, 30);\n  delay(500);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(500);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 1000, 30, 1);\n  Otto.moonwalker(1, 1000, 30, -1);\n  Otto.moonwalker(1, 1000, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(150);\n  Otto.home();\n}",
c="feeling_good();\n"):"Happy Dance"==a?(b="void happy_dance() {\n  Otto.jitter(2, 750, 20);\n  Otto.crusaito(1, 800, 30, 1);\n  Otto.crusaito(1, 800, 30, -1);\n  Otto.crusaito(1, 800, 30, 1);\n  delay(300);\n  Otto.walk(1, 1500, -1);\n  Otto.walk(2, 1000, 1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.walk(1, 1500, -1);\n  Otto.walk(2, 1000, 1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.walk(1, 1500, -1);\n  Otto.walk(2, 1000, 1);\n  Otto.shakeLeg(1, 700, 1);\n  Otto.shakeLeg(1, 700, -1);\n  delay(1000);\n  Otto.home();\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.moonwalker(1, 3000, 50, -1);\n  delay(100);\n  Otto.moonwalker(1, 3000, 50, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  delay(500);\n  Otto.crusaito(1, 800, 30, 1);\n  Otto.crusaito(1, 800, 30, -1);\n  Otto.crusaito(1, 800, 30, 1);\n  delay(300);\n  Otto.walk(1, 1500, -1);\n  Otto.walk(2, 1000, 1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.walk(1, 1500, -1);\n  Otto.walk(2, 1000, 1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.moonwalker(1, 600, 30, 1);\n  Otto.moonwalker(1, 600, 30, -1);\n  Otto.walk(1, 1500, -1);\n  Otto.walk(2, 1000, 1);\n  Otto.shakeLeg(1, 700, 1);\n  Otto.shakeLeg(1, 700, -1);\n  delay(1000);\n  Otto.home();\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.moonwalker(1, 3000, 50, -1);\n  delay(100);\n  Otto.moonwalker(1, 3000, 50, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.updown(3, 900, 30);\n  Otto.jitter(3, 1000, 20);\n  Otto.updown(3, 900, 30);\n  Otto.jitter(3, 1000, 20);\n  Otto.jump(1, 400);\n  Otto.jump(1, 400);\n  Otto.jump(1, 400);\n  Otto.jump(1, 400);\n  Otto.jitter(4, 800, 20);\n  Otto.jump(1, 400);\n  Otto.jump(1, 400);\n  Otto.jump(1, 400);\n  Otto.jump(1, 400);\n  Otto.jitter(2, 800, 20);\n  delay(1500);\n  Otto.home();\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.moonwalker(1, 3000, 50, -1);\n  delay(100);\n  Otto.moonwalker(1, 3000, 50, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.moonwalker(1, 3000, 50, -1);\n  delay(100);\n  Otto.moonwalker(1, 3000, 50, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.home();\n  Otto.updown(3, 900, 30);\n  Otto.jitter(3, 1000, 20);\n  Otto.updown(3, 900, 30);\n  Otto.jitter(3, 1000, 20);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.moonwalker(1, 3000, 50, -1);\n  delay(100);\n  Otto.moonwalker(1, 3000, 50, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.moonwalker(1, 3000, 50, -1);\n  delay(100);\n  Otto.moonwalker(1, 3000, 50, -1);\n  Otto.moonwalker(1, 3000, 50, 1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.jump(1, 370);\n  Otto.bend(1, 100, 1);\n  Otto.bend(1, 100, -1);\n  Otto.home();\n}",
c="happy_dance();\n"):"Touch Me"==a&&(b="void touch_me() {\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 1000, 30, 1);\n  Otto.moonwalker(1, 1000, 30, -1);\n  Otto.moonwalker(1, 1000, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(150);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  delay(100);\n  Otto.jitter(8, 900, 30);\n  delay(500);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(150);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  delay(100);\n  Otto.jitter(8, 900, 30);\n  delay(500);\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(500);\n  Otto.home();\n  Otto.moonwalker(1, 950, 30, 1);\n  Otto.moonwalker(1, 950, 30, -1);\n  Otto.moonwalker(1, 950, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.moonwalker(1, 1000, 30, 1);\n  Otto.moonwalker(1, 1000, 30, -1);\n  Otto.moonwalker(1, 1000, 30, 1);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  delay(150);\n  Otto.home();\n  Otto.swing(3, 1000, 30);\n  Otto.home();\n  Otto.ascendingTurn(8, 870, 30);\n  Otto.home();\n  Otto.jitter(8, 900, 30);\n  delay(150);\n  Otto.home();\n  Otto.updown(8, 870, 30);\n  Otto.tiptoeSwing(7, 900, 30);\n  delay(150);\n  Otto.home();\n}",
c="touch_me();\n");Blockly.Arduino.definitions_.definitions_ottoRobot_setDance=b;return c};Blockly.Arduino.arduino_ottoRobot_getDistance=function(a){Blockly.Arduino.customFunctions_.definitions_ottoRobot_getDistance="#include <Ultrasonic.h>\nUltrasonic ultrasonic(PIN_TRIGGER, PIN_ECHO);\nint distance;";return"distance = ultrasonic.read();\n"};Blockly.Arduino.arduino_ottoRobot_readDistance=function(a){return["distance",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.arduino_ottoRobot_setMove=function(a){var b=a.getFieldValue("MOVE");a=Blockly.Arduino.valueToCode(a,"DURATION",Blockly.Arduino.ORDER_NONE)||1;var c="";"Forward"==b?c="Otto.walk(1, "+1E3*a+", 1);\n":"Backward"==b?c="Otto.walk(1, "+1E3*a+", -1);\n":"Turn Left"==b?c="Otto.turn(1, "+1E3*a+", 1);\n":"Turn Right"==b&&(c="Otto.turn(1, "+1E3*a+", -1);\n");return c};
Blockly.Arduino.arduino_ottoRobot_setAction=function(a){var b=a.getFieldValue("ACTION"),c=Blockly.Arduino.valueToCode(a,"DURATION",Blockly.Arduino.ORDER_NONE)||128;a=Blockly.Arduino.valueToCode(a,"ANGLE",Blockly.Arduino.ORDER_NONE)||1;var d="";"Ascending Turn"==b?d="Otto.ascendingTurn(1, "+1E3*c+", "+a+");\n":"Bend Left Foot"==b?d="Otto.bend(1, "+a+", -1);\n":"Bend Right Foot"==b?d="Otto.bend(1, "+a+", 1);\n":"Crusaito Forward"==b?d="Otto.crusaito(1, "+1E3*c+", "+a+", 1);\n":"Crusaito Backward"==
b?d="Otto.crusaito(1, "+1E3*c+", "+a+", -1);\n":"Flapping Forward"==b?d="Otto.flapping(1, "+1E3*c+", "+a+", 1);\n":"Flapping Backward"==b?d="Otto.flapping(1, "+1E3*c+", "+a+", -1);\n":"Jitter"==b?d="Otto.jitter(1, "+1E3*c+", "+a+");\n":"Jump"==b?d="Otto.jump(1, "+a+");\n":"Moonwalker Left"==b?d="Otto.moonwalker(1, "+1E3*c+", "+a+", 1);\n":"Moonwalker Right"==b?d="Otto.moonwalker(1, "+1E3*c+", "+a+", -1);\n":"Shake Left Foot"==b?d="Otto.shakeLeg(1, "+1E3*c+", -1);\n":"Shake Right Foot"==b?d="Otto.shakeLeg(1, "+
1E3*c+", 1);\n":"Swing"==b?d="Otto.swing(1, "+1E3*c+", "+a+");\n":"Tiptoe Swing"==b?d="Otto.tiptoeSwing(1, "+1E3*c+", "+a+");\n":"Up & Down"==b&&(d="Otto.updown(1, "+1E3*c+", "+a+");\n");return d};Blockly.Arduino.arduino_ottoRobot_setTone=function(a){var b=a.getFieldValue("TONE"),c=Blockly.Arduino.valueToCode(a,"DURATION",Blockly.Arduino.ORDER_NONE)||100;a=Blockly.Arduino.valueToCode(a,"SILENT",Blockly.Arduino.ORDER_NONE)||100;return"Otto._tone("+b+", "+c+", "+a+");\n"};
Blockly.Arduino.arduino_ottoRobot_setBendTone=function(a){var b=a.getFieldValue("INITIALTONE"),c=a.getFieldValue("FINALTONE"),d=Blockly.Arduino.valueToCode(a,"STEP",Blockly.Arduino.ORDER_NONE)||1.01,e=Blockly.Arduino.valueToCode(a,"DURATION",Blockly.Arduino.ORDER_NONE)||100;a=Blockly.Arduino.valueToCode(a,"SILENT",Blockly.Arduino.ORDER_NONE)||100;return"Otto.bendTones("+b+", "+c+", "+d+", "+e+", "+a+");\n"};
Blockly.Arduino.arduino_ottoRobot_setCalibration=function(a){Blockly.Arduino.includes_.include_ottoRobot="#include <EEPROM.h>\n#include <Otto.h>\nOtto Otto;";Blockly.Arduino.definitions_.definitions_ottoRobot_setCalibration="#define PIN_LEG_L           4   // Left leg servo\n#define PIN_LEG_R           5   // Right leg servo\n#define PIN_FOOT_L          6   // Left foot servo\n#define PIN_FOOT_R          7   // Right foot servo\n#define PIN_TRIGGER         8   // TRIGGER PIN (8)\n#define PIN_ECHO            9   // ECHO PIN (9)\n#define PIN_BUZZER          13  // BUZZER PIN (13)\n\nint positions[4] = {90, 90, 90, 90};\nint8_t trims[4] = {0, 0, 0, 0};\n\nvoid help() {\n  Serial.println();\n  Serial.println(\"Otto Robot Calibration:\");\n  Serial.println(\"Send 'd' or 'f' for adjusting Left Leg\");\n  Serial.println(\"Send 'j' or 'k' for adjusting Right Leg\");\n  Serial.println(\"Send 'c' or 'v' for adjusting Left Foot\");\n  Serial.println(\"Send 'n' or 'm' for adjusting Right Foot\");\n  Serial.println();\n  Serial.println(\"Send 's' to save calibration settings\");\n}\n\nvoid set_trims() {\n  Otto.setTrims(trims[0], trims[1], trims[2], trims[3]);\n  Otto._moveServos(10, positions);\n}\n\nvoid read_char(char cmd) {\n  switch (cmd) {\n    case 'd':\n      trims[0]++;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'd' to adjust Left Leg <<<\");\n      Serial.println(trims[0], DEC);\n      help();\n      break;\n    case 'f':\n      trims[0]--;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'f' to adjust Left Leg <<<\");\n      Serial.println(trims[0], DEC);\n      help();\n      break;\n    case 'j':\n      trims[1]++;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'j' to adjust Right Leg <<<\");\n      Serial.println(trims[1], DEC);\n      help();\n      break;\n    case 'k':\n      trims[1]--;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'k' to adjust Right Leg <<<\");\n      Serial.println(trims[1], DEC);\n      help();\n      break;\n    case 'c':\n      trims[2]++;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'c' to adjust Left Foot <<<\");\n      Serial.println(trims[2], DEC);\n      help();\n      break;\n    case 'v':\n      trims[2]--;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'v' to adjust Left Foot <<<\");\n      Serial.println(trims[2], DEC);\n      help();\n      break;\n    case 'n':\n      trims[3]++;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'n' to adjust Right Foot <<<\");\n      Serial.println(trims[3], DEC);\n      help();\n      break;\n    case 'm':\n      trims[3]--;\n      set_trims();\n      Serial.println();\n      Serial.println(\">>> Received 'm' to adjust Right Foot <<<\");\n      Serial.println(trims[3], DEC);\n      help();\n      break;\n    case 's':\n      Serial.println();\n      Serial.println(\">>> Received 's' to save calibration settins <<<\");\n      for (int i = 0; i <= 3; i++) {\n          EEPROM.write(i, trims[i]);\n      }\n      delay(500);\n      Otto.sing(S_superHappy);\n      Otto.sing(S_happy_short);\n      help();\n      break;\n  }\n}";
Blockly.Arduino.setups_.setups_ottoRobot_definitions_ottoRobot_setCalibration="Otto.init(PIN_LEG_L, PIN_LEG_R, PIN_FOOT_L, PIN_FOOT_R, true, PIN_BUZZER);\n  Otto.home();\n  Serial.begin(9600);\n  while (!Serial);\n  help();";return"read_char(Serial.read());\n"};Blockly.Arduino.procedures={};Blockly.Arduino.procedures_definition=function(a){var b=Blockly.Arduino.statementToCode(a,"custom_block");b=b.slice(2);a=Blockly.Arduino.scrub_(a,b+" {\n");Blockly.Arduino.customFunctions_[b]=a+"}\n";return null};
Blockly.Arduino.procedures_call=function(a){var b=a.getProcCode();b=b.replace(/ /g,"_");b=b.replace(/%n/g,"N");b=b.replace(/%s/g,"S");b=b.replace(/%b/g,"B");b=Blockly.Arduino.variableDB_.getName(b,Blockly.Procedures.NAME_TYPE);for(var c=[],d=0;d<a.inputList.length;d++)if(a.inputList[d].type==Blockly.INPUT_VALUE)if(a.inputList[d].connection.targetBlock()){var e=a.inputList[d].connection.targetBlock();e=Blockly.Arduino.blockToCode(e);c.push(e[0])}else c.push("false");return b+"("+c.join(", ")+");\n"};
Blockly.Arduino.procedures_prototype=function(a){var b=a.getProcCode();a=a.displayNames_;var c=[];b=b.replace(/ /g,"_");for(var d=0;d<a.length;d++){var e=b.charAt(b.indexOf("%")+1),g=Blockly.Arduino.variableDB_.getName(a[d],Blockly.Procedures.NAME_TYPE);Blockly.Arduino.customFunctionsArgName_[a[d]]=g;"n"===e?(b=b.replace("%n","N"),c.push("float "+g)):"s"===e?(b=b.replace("%s","S"),c.push("String "+g)):(b=b.replace("%b","B"),c.push("boolean "+g))}b=Blockly.Arduino.variableDB_.getName(b,Blockly.Procedures.NAME_TYPE);
return"void "+b+"("+c.join(", ")+")"};Blockly.Arduino.argument_reporter_boolean=function(a){a=a.getFieldValue("VALUE");return[Blockly.Arduino.customFunctionsArgName_[a],Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.argument_reporter_number=function(a){a=a.getFieldValue("VALUE");return[Blockly.Arduino.customFunctionsArgName_[a],Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.argument_reporter_string=function(a){a=a.getFieldValue("VALUE");return[Blockly.Arduino.customFunctionsArgName_[a],Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.texts={};Blockly.Arduino.text=function(a){return[Blockly.Arduino.quote_(a.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]};
